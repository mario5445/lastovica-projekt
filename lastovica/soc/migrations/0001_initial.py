# Generated by Django 4.2.13 on 2024-05-31 09:38

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Dostupnost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazov', models.CharField(max_length=32)),
            ],
            options={
                'verbose_name': 'Dostupnosť',
                'verbose_name_plural': 'Dostupnosti',
                'ordering': ['nazov'],
            },
        ),
        migrations.CreateModel(
            name='Odbor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazov', models.CharField(max_length=64)),
            ],
            options={
                'verbose_name': 'Odbor',
                'verbose_name_plural': 'Odbory',
                'ordering': ['nazov'],
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meno', models.CharField(max_length=16)),
                ('priezvisko', models.CharField(max_length=32)),
                ('email', models.EmailField(max_length=254)),
                ('heslo', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Študent',
                'verbose_name_plural': 'Študenti',
                'ordering': ['priezvisko'],
            },
        ),
        migrations.CreateModel(
            name='Trieda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazov', models.CharField(max_length=7)),
            ],
            options={
                'verbose_name': 'Trieda',
                'verbose_name_plural': 'Triedy',
                'ordering': ['nazov'],
            },
        ),
        migrations.CreateModel(
            name='Ucitel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meno', models.CharField(max_length=16)),
                ('priezvisko', models.CharField(max_length=32)),
                ('email', models.EmailField(max_length=254)),
                ('heslo', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Učiteľ',
                'verbose_name_plural': 'Učitelia',
                'ordering': ['priezvisko'],
            },
        ),
        migrations.CreateModel(
            name='Tema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nazov', models.CharField(max_length=32)),
                ('popis', models.TextField()),
                ('pocet_konzultacii', models.IntegerField(default=0)),
                ('dostupnost', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='soc.dostupnost')),
                ('konzultant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='soc.ucitel')),
                ('odbor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='soc.odbor')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='soc.student')),
            ],
            options={
                'verbose_name': 'Téma',
                'verbose_name_plural': 'Témy',
                'ordering': ['-dostupnost'],
            },
        ),
        migrations.AddField(
            model_name='student',
            name='trieda',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='soc.trieda'),
        ),
    ]
